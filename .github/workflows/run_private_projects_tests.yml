name: 'run_private_projects_tests'

on:
  workflow_dispatch:
  
  schedule:
    - cron: '30 23 * * 0'  # 23:30 every Sunday

  workflow_call:  
    secrets:
      PRIVATE_PROJ_REPO_URL:
        required: true
      PRIVATE_PROJ_REPO_PAT:
        required: true
jobs:
  private-tests:
    name: ${{ matrix.os }}.${{ matrix.CC }}.python-${{ matrix.python }}.dgcode-${{ matrix.build-flag }}
    strategy:
      fail-fast: false
      matrix: 
        include:
          - { os: ubuntu-20.04, CC: gcc-10,   CXX: g++-10,     python: '3.9', build-flag: release }
          - { os: ubuntu-20.04, CC: gcc-10,   CXX: g++-10,     python: '3.9', build-flag: debug }
          - { os: ubuntu-20.04, CC: gcc-9,   CXX: g++-9,     python: '3.8', build-flag: release }
          - { os: macos-11,  CC: clang,    CXX: clang++,    python: default, build-flag: examine }
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      SHELL: /bin/bash
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      PROJECTS_DIR: projects
      PKGS_REL_PATH: / #/packages/Projects

    steps:
      - name: Checkout dgcode_actions
        uses: actions/checkout@v3
        with:
          repository: mctools/dgcode_actions

      - name: Checkout private projects repo
        run: | 
          git clone https://oauth2:${{ secrets.PRIVATE_PROJ_REPO_PAT }}@${{ secrets.PRIVATE_PROJ_REPO_URL }} $GITHUB_WORKSPACE/dg_dgcode

      # - name: Checkout Public Projects (possible dependencies)
      #   uses: actions/checkout@v3
      #   with:
      #     repository: ess-dg/dgcode_projects
      #     path: './packages'
      # TODO: edit DGCODE_PKG_PATH in the 'Run DGCode tests' step 
      #       export DGCODE_PKG_PATH="$GITHUB_WORKSPACE/dg_dgcode${{ env.PKGS_REL_PATH }}:$GITHUB_WORKSPACE/packages"

      - name: Setup framework action
        id: setup-framework
        uses: ./.github/actions/setup
        with:
          PYTHON_VERSION: ${{ matrix.python }}
          PROJECTS_DIR: ${{ env.PROJECTS_DIR }}
          DGBUILD_FLAG: ${{ matrix.build-flag }}
         
      - name: Run DGCode tests
        run: |
          . $GITHUB_WORKSPACE/dgdepfixerInstall/setup.sh
          export DGCODE_PKG_PATH="$GITHUB_WORKSPACE/dg_dgcode${{ env.PKGS_REL_PATH }}"
          . bootstrap.sh
          dgbuild -at --testexcerpts=20 --${{ matrix.build-flag }}
        working-directory: ${{ env.PROJECTS_DIR }}
        env:
          DGDEP_IGNOREBADSHEBANG: 1

      - name: Rename test result
        id: rename-test-result
        if: always() && steps.setup-framework.outcome == 'success'
        run: mv $GITHUB_WORKSPACE/${{ env.PROJECTS_DIR }}/.bld/testresults/dgtest_results_junitformat.xml $GITHUB_WORKSPACE/${{ env.PROJECTS_DIR }}/.bld/testresults/dgtest_results_junitformat_${{ matrix.os }}.${{ matrix.CC }}.python-${{ matrix.python }}.dgcode-${{ matrix.build-flag }}.xml

      - uses: actions/upload-artifact@v2  # upload test results
        if: always() && steps.rename-test-result.outcome == 'success'
        with:
          name: test-results-private-projects
          path: ${{ github.workspace }}/${{ env.PROJECTS_DIR }}/.bld/testresults/dgtest_results_junitformat_${{ matrix.os }}.${{ matrix.CC }}.python-${{ matrix.python }}.dgcode-${{ matrix.build-flag }}.xml

  report:
    name: Test reporting
    if: always()
    needs: private-tests
    runs-on: ubuntu-latest
    steps:

    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
        name: test-results-private-projects
        path: artifact_dir
  
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      if: always()
      with:
        check_name: Private Projects Tests Report (EnricoMi)
        files: artifact_dir/dgtest_results_junitformat*.xml
        report_individual_runs: "true"
        comment_mode: "off" #control pull request comments